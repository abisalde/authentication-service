services:
  auth-service:
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    networks:
      - auth-net
    environment:
      DB_HOST: mysql-dev
      DB_PORT: 3306
      DB_USER: appuser
      DB_PASSWORD_FILE: /run/secrets/dev_db_password
      DB_NAME: authservicelocal
      DB_SSL_MODE: disable
      REDIS_ARGS: --save 1200 32
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
      REDIS_URL: redis://default:$$(cat /run/secrets/redis_password)@redis:6379
    secrets:
      - dev_db_password
      - redis_password
    depends_on:
      mysql-dev:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql-dev:
    image: mysql:lts
    container_name: mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/dev_db_password
      MYSQL_USER: appuser
      MYSQL_PASSWORD_FILE: /run/secrets/dev_db_password
      MYSQL_DATABASE: authservicelocal
    secrets:
      - dev_db_password
    ports:
      - '3388:3306'
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ../secrets/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - auth-net
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis/redis-stack:7.2.0-v17
    container_name: redis
    environment:
      REDIS_ARGS: --save 1200 32
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
    secrets:
      - redis_password
    command: redis-server --requirepass /run/secrets/redis_password
    volumes:
      - redis_data:/data
    ports:
      - '6388:6379'
    networks:
      - auth-net
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mysql_dev_data:
  redis_data:

secrets:
  dev_db_password:
    file: ../secrets/.dev_db_password
  redis_password:
    file: ../secrets/.redis_password

networks:
  auth-net:
    driver: bridge
